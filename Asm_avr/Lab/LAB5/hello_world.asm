	.INCLUDE "m128def.inc"
	
	.DSEG
	.EQU F_CPU = 16000000
	
	.DEF CH = R16
	.DEF COL = R17
	.DEF ROW = R18
	
	.MACRO LCD_CHAR
	CALL D200US
	MOV CH, @0
	CALL LCD_DATA
	.ENDMACRO
	
	.MACRO LCD_POS
	MOV COL, @0
	MOV ROW, @1
	CALL LCD_CURSOR
	.ENDMACRO
	
	.MACRO LCD_DISPLAY
	PUSH R16
	.SET INIT_COL = @1
	.SET INIT_ROW = @2
	.SET OFFSET = @3
	
	LDI ZL, LOW(@0)
	LDI ZH, HIGH(@0)
	
	LDI R16, OFFSET
	ADD ZL, R16
	POP R16
	
	CALL LCD_STR
	.ENDMACRO
	
	.CSEG
	.ORG 0x0000
	RJMP LOOP
	
uSTR: .DB "HELLO ", "WORLD", 0x00
	
LOOP:
	LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R16, HIGH(RAMEND)
	OUT SPH, R16
	
	LDI R16, 0xF0
	OUT DDRA, R16
	LDI R16, 0x03
	OUT DDRC, R16
	
	CALL LCD_INIT
	
	LCD_DISPLAY uSTR, 5, 0, 0
	
INFINITE:
	RJMP INFINITE
	
LCD_INIT:
	LDI CH, 0x20
	CALL LCD_COMM
	CALL D5MS
	LDI CH, 0x28
	CALL LCD_COMM
	CALL D5MS
	LDI CH, 0x0C
	CALL LCD_COMM
	LDI CH, 0x06
	CALL LCD_COMM
	CALL D5MS
	LDI CH, 0x01
	CALL LCD_COMM
	RET
	
LCD_COMM:
	PUSH R17
	LDI R17, PORTC
	
	RCALL FLIP_BITS
	
	OUT PORTA, R20
	
	ANDI R17, 0xFD
	OUT PORTC, R17
	ORI R17, 0x01
	OUT PORTC, R17
	CALL BASE1US
	ANDI R17, 0xFE
	OUT PORTC, R17
	
	LSL CH
	LSL CH
	LSL CH
	LSL CH
	RCALL FLIP_BITS
	
	OUT PORTA, R20
	
	ANDI R17, 0xFD
	OUT PORTC, R17
	ORI R17, 0x01
	OUT PORTC, R17
	CALL BASE1US
	ANDI R17, 0xFE
	OUT PORTC, R17
	CALL D5MS
	
	POP R17
	
	RET
	
LCD_DATA:
	PUSH R17
	PUSH R18
	
	LDI R17, PORTC
	
	RCALL FLIP_BITS
	
	OUT PORTA, R20
	
	ORI R17, 0x02
	OUT PORTC, R17
	ORI R17, 0x01
	OUT PORTC, R17
	CALL BASE1US
	ANDI R17, 0xFE
	OUT PORTC, R17
	CALL D20US
	
	LSL CH
	LSL CH
	LSL CH
	LSL CH
	RCALL FLIP_BITS
	
	OUT PORTA, R20
	
	ORI R17, 0x02
	OUT PORTC, R17
	ORI R17, 0x01
	OUT PORTC, R17
	CALL BASE1US
	ANDI R17, 0xFE
	OUT PORTC, R17
    CALL D50US
		
	POP R18
	POP R17
	RET
	
LCD_CURSOR:
	PUSH R17
	PUSH R18
	
	MOV R17, COL
	MOV R18, ROW
	
	LSL R18
	LSL R18
	LSL R18
	LSL R18
	LSL R18
	LSL R18
	
	ADD R17, R18
	ORI R17, 0x80
    MOV CH, R17
	CALL LCD_COMM
	
	POP R18
	POP R17
	RET
	
LCD_STR:
	PUSH R22
	PUSH R21
    LDI R22, 0
	LDI R22, INIT_COL
	
STR_LOOP:
	LPM R20, Z+ 
	TST R20
	BREQ STR_END
	
	INC R21
	CPI R21, INIT_COL + 1
	BREQ STR_LOOP
	
    MOV R1, R21
    DEC R1
	DEC R1
    LCD_POS R1, INIT_ROW
    LCD_CHAR R22

    RJMP STR_LOOP
    
STR_END:
	POP R21
	POP R22
	RET
	
FLIP_BITS:
	PUSH R17
	PUSH R18
    PUSH R19

	LDI R19, 0x00
	
	LDI R17, 0x10
	MOV R18, CH
	LSR R18
	LSR R18
	LSR R18
	AND R18, R17
    MOV R19, R18
	
	LDI R17, 0x20
	MOV R18, CH
	LSR R18
    AND R18, R17
    OR R19, R18
	
	LDI R17, 0x40
	MOV R18, CH
	LSL R18
	AND R18, R17
    OR R19, R18
	
	LDI R17, 0x80
	MOV R18, CH
	LSL R18
	LSL R18
    LSL R18
	AND R18, R17
    OR R19, R18
	
	MOV R20, R19

    POP R19
	POP R18
	POP R17
	RET
	
	; Delay Subroutines
D500MS:
	RCALL D100MS
	RCALL D200MS
	RCALL D200MS
	RET
	
D5MS:
	LDI R18, 5
	RJMP BASE1MS
	
D100MS:
	LDI R18, 100
	RJMP BASE1MS
	
D200MS:
	LDI R18, 200
	
BASE1MS:
	RCALL D200US
	RCALL D200US
	RCALL D200US
	RCALL D200US
	RCALL D200US
	DEC R18
	BRNE BASE1MS
	RET
	
D50US:
	LDI R19, 50
	RCALL BASE1US
	RET

D20US:
    LDI R19, 20
	RCALL BASE1US
	RET
	
D200US:
	LDI R19, 200
	
BASE1US:
	NOP
	PUSH R19
	POP R19
	PUSH R19
	POP R19
	PUSH R19
	POP R19
	DEC R19
	BRNE BASE1US
	RET
